{
  "hash": "36e45e0fa6409ffa9240f56e06c0fa89",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A proof of concept: a coin-toss game\"\nsubtitle: \"The most toy model\"\nauthor: \"Damie Pak\"\nimage: \"coin.jpg\"\ncategories: [\"Code\"]\ntoc: true\ndraft: false\ncache: true\nfreeze: auto\ntitle-block-banner: true\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n## An introduction\n\nThis is a proof-of-concept for a research project I'm developing. Therefore, this is written more for me than for a general audience (sorry!). I can't give it all away now, but hopefully it's a taste of what I'm doing. Instead of an ecological question, let's imagine you are hosting a BBQ and you somehow got a large group of your friends to play a lawn game. Everyone is given a coin and told to flip. If you get heads, you proceed one step. If you get tails, you die (specifically, you just lay down and stay in place). You 'win' if you can make it 10 paces away. Here is a schematic below:\n\n![](coin_flipping_schematicpdf.jpg)\n\nBut let's make it more interesting! Let's assume that the coin can be super biased. Instead of a 50% chance of dying, I manipulate it so that the chance of getting tails can vary from 1% to 100%. Also let's assume that I introduce some variability. Some friends can only take very small steps and other friends can take larger steps. They somehow need to cumulatively take 10 paces to win, but you can see that there are advantages to those who can take very large steps.\n\nMy question is what does it look like at the end of the finish line. Specifically, what are the group of individuals that are able to finish (i.e do they take small steps or big steps?) and what is the timing? How does this differ depending on what kind of mortality coin I give them and what kind of steps I allow them to take?\n\n## The simplest code\n\nFor the death function, I'm going to use sample until I think a bit more about the gritty mathematics. There is a binary outcome: you survived in this timestep or you perished in this timestep. But we can directly manipulate the probability of mortality.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeath_function <- function(size, mort_prob){\n  sampled <- sample(c(0,1), size,replace = TRUE, prob =c(mort_prob, 1- mort_prob))\n  return(sampled)\n}\n```\n:::\n\n\n\n\nNow, how do our friends progress through the lawn game. We can give everyone a number (1,2,3) and depending on your number, you can take large steps or very small. You can see that if you are in Group 1, you take smaller steps than individuals in Group 3.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprogress_function <- function(id){\n  \n  if(id ==1){\n  sampled <- runif(1,min =0, max =3)\n  }\n  else if (id ==2){\n  sampled <- runif(1,min = 2,max=5)\n  }\n  else if (id ==3){\n  sampled <- runif(1,min = 5, max =10)\n  }\n  return(sampled)\n}\n```\n:::\n\n\n\n\nNow here is the most convoluted code of how the race can begin. A gist of it is that for anyone who has not died, I make them flip the coin. If it's 0, they stay in place and I record at what time they 'died'. If it's a 1, they are still alive where they can make progress to winning. If they accumulate 10 steps, they won and wait while everyone finishes (by either 'dying' or 'winning').\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlawn_race_function <- function(size, mort_prob, progress_time,time_step) {\n  full_df <- data.frame(\n      current_time = rep(0, size),\n      time_event = rep(0, size),\n      status = rep(1, size),\n      progress = rep(0, size),\n       id = rep(c(1, 2, 3), length = size),\n       friend_number = seq(1, size))\n\n  survived_subsetted <- full_df [full_df $status == 1 ,]\n  \n  i = 0\n  \n  while (nrow(full_df [full_df $status == 1 ,]) != 0) {\n    \n    i = i + 1\n    dead_developed_already_subsetted <- full_df[full_df$status %in% c(0,2),]\n    survived_subsetted <- full_df [full_df $status == 1 ,]\n    survived_individuals <- nrow(survived_subsetted)\n ###If there are surviving individuals\n      \n      survived_subsetted$current_time <- i\n\n      ### Did they die in this time-step?\n      survived_subsetted$status <- death_function(survived_individuals, mort_prob)\n      \n      if(nrow(  survived_subsetted[survived_subsetted$status == 0, ])!=0){\n      \n      survived_subsetted[survived_subsetted$status == 0, ]$time_event <- i\n\n      }\n      ### Progressed\n      growing_indviduals <- survived_subsetted[survived_subsetted$status == 1, ]\n\n      ###If there are those that will grow\n      if(nrow(growing_indviduals) !=0){\n      \n      growing_indviduals$progress <- round(growing_indviduals $progress + \n                                            time_step*sapply(X = growing_indviduals $id, FUN = progress_function ), 3)\n\n      developed <- growing_indviduals[growing_indviduals$progress >= progress_time, ]\n\n      ###If there are those developed \n      if(nrow(developed) != 0){\n      growing_indviduals[growing_indviduals$progress >= progress_time, ]$status <- 2\n      growing_indviduals[growing_indviduals$status == 2, ]$time_event <- i\n      }\n      }\n      \n      full_df <- rbind(dead_developed_already_subsetted ,\n        survived_subsetted[survived_subsetted$status == 0, ],\n       growing_indviduals\n      )\n  \n  \n  }\n  return(full_df)\n}\n```\n:::\n\n\n\n\n## The result\n\nSo I set two matches with 100,000 of my friends. The first match, the probability of dying at each time step is 0.001 and you must make 10 steps to win. The second match, the probability of dying at each time step is 0.10 and still you must take 10 steps to win. What does it look like between the two races?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_lawn_race1<- lawn_race_function(1e5,0.01,10,time_step = 1/5)\ndf_lawn_race2<- lawn_race_function(1e5,0.40,10,time_step = 1/5)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfirst_panel / second_panel +   plot_layout(guides = 'collect')\n```\n\n::: {.cell-output-display}\n![](coin_flip_files/figure-html/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n\nSo it may be intuitive, but I like having this simulation and figure. When you're in a race where the chance of mortality is very small, all groups are able to effectively 'win'. The slower group (Group 3 with the star symbol!) may take a lot longer but eventually they will reach the finish line. However, in the second situation (the bottom graph), with greater chance for mortality, the one who are able to finish the race faster (Group 1) are more likely to win. With each time step.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nLet's take a new perspective\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nSo everyone who won in the game, what does it look as a cumulative proportion over time. The first race (dark green) and second race (blue) are quite different!\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](coin_flip_files/figure-html/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_full, aes(x = time_event, y= prop, color = as.factor(facet), group = as.factor(facet)))+\n geom_line(size =1.2)+\n  xlab(\"Time\")+\n  ylab(\"Cumulative proportion winning\")+\n  scale_color_manual(name = \"Race\",values = c(`1` = 'darkgreen', `2` = 'blue'))+\n  theme_classic()+\n theme(axis.text = element_text(size = 14),\n        axis.title = element_text(size = 14))+xlim(0,60)\n```\n\n::: {.cell-output-display}\n![](coin_flip_files/figure-html/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n\n\nHuh... Could there be more variability of individuals winning in the first race?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}