{
  "hash": "9bc0754ca7a3570ac9998703f1daef7f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Poisson process\"\nsubtitle: \"Learning for me\"\nauthor: \"Damie Pak\"\nimage: \"fish.jpg\"\ncategories: [\"Tutorial\"]\ntoc: true\ndraft: false\ncache: true\neditor_options: \n  chunk_output_type: console\nfreeze: auto\ntitle-block-banner: true\n---\n\n\n\n\n\nWIP\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(gganimate)\n```\n:::\n\n\n\n\n\nSo I'm trying to be better about learning the Poisson process, so here's me forcing myself to learn.\n\n## Definition\n\nThe Poisson process is for situations where we want to model a bunch of sequential events. We have a rate parameter that can tell us the average number of events that happen within a time-frame, but the timing of these events is random. Some important assumptions are that (1) the events are independent of each other, (2) the average rate is constant, and (3) events cannot happen simultaneously.\n\nLet us say that the number of events at time $t$ is $N(t)$. First rule, in the beginning ($t=0$), we have no events ($N(0)=0$). Second rule, each time there are events, they are independent of each other. Third rule, the number of events in the interval length of $\\tau$ is described with the Poisson distribution with the mean being $\\lambda \\tau$ where $\\lambda$ is the average number of events to occur within a timeframe.\n\nFollowing from my favorite textbook site [ProbabilityCourse](https://www.probabilitycourse.com/chapter11/11_1_2_basic_concepts_of_the_poisson_process.php). I'm going to code up the explanation for the third rule above.\n\n## Poisson Process as the Limit of a Bernoulli Process\n\nSo the Poisson process can be thought of as the continuous version of the Bernoulli Process. For example, imagine that you have some time interval with the length ($t$) split up into 20 smaller intervals ($\\Delta$) as below.\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in is.na(x): is.na() applied to non-(list or vector) of type\n'expression'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](poisson_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\n\nNow imagine that at each interval, you flip a coin. Everytime it's head, you record at which interval it happened!\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_1 <- cbind.data.frame(time= seq(1,20),\n                           coin = sample(c(\"H\",\"T\"),20, \n                                         replace = TRUE, \n                                         prob =c (0.5,0.5)),\n                            x = seq(0.25,9.75,0.5),\n                            y = 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n ggplot(data= NULL,aes(x = seq(0,10), y = 0))+\n  geom_line()+\n  geom_segment(aes(x = seq(0,10,0.5), \n                   xend = seq(0,10,0.5),\n                   y = - 0.01, yend = 0.01 )) + \n  ylim(-0.1,0.15)+ theme_void()+\n  geom_point(data = test_1, aes(x=x, y= y, color = coin), size = 4)+\n\n  scale_color_manual(values = c(\"H\" = \"red\", \"T\" = 'grey' ))+\n  transition_states(time)\n```\n\n::: {.cell-output-display}\n![](poisson_files/figure-html/unnamed-chunk-4-1.gif)\n:::\n:::\n\n\n\n\n\nHow many heads did we get?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(test_1$coin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n H  T \n 7 13 \n```\n\n\n:::\n:::\n\n\n\n\n\nHm, what if we decrease the size of $\\Delta$\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}